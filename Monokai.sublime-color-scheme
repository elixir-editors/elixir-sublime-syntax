{
  "name": "Monokai for Elixir",
  "rules":
  [
    {
      "name": "EEx tag",
      "scope": "punctuation.section.embedded.begin.eex | punctuation.section.embedded.end.eex",
      "foreground": "color(var(red) s(- 30%))"
    },
    {
      "name": "EEx embedded",
      "scope": "source.elixir.embedded.html",
      "background": "color(var(white) a(0.05))"
    },
    {
      "name": "Doc attribute",
      "scope": "support.attr.doc.elixir",
      "foreground": "var(yellow5)"
    },
    {
      "name": "Doc string",
      "scope": "source.markdown.embedded.elixir",
      "foreground": "var(yellow5)"
    },
    {
      "name": "Support attributes",
      "scope": "support.attr.elixir",
      "foreground": "var(blue)"
    },
    {
      "name": "Unused variable",
      "scope": "variable.other.unused.elixir",
      "foreground": "color(var(yellow5) a(0.6))"
    },
    {
      "name": "Unused parameter",
      "scope": "variable.parameter.unused.elixir",
      "foreground": "color(var(orange) a(0.6))"
    },
    {
      "name": "Module atom",
      "scope": "constant.other.module.elixir",
      "foreground": "color(var(yellow2) s(+ 50%) l(- 20%))"
    },
    {
      "name": "Atom keyword",
      "scope": "constant.other.keyword.elixir",
      "foreground": "color(var(purple) s(- 50%) l(- 20%))"
    },
    {
      "name": "Atom keyword punctuation",
      "scope": "punctuation.definition.constant",
      "foreground": "color(var(white) a(0.65))"
    },
    {
      "name": "Numeric punctuation",
      "scope": "punctuation.separator.numeric.elixir | punctuation.separator.decimal.elixir",
      "foreground": "color(var(purple) s(- 30%))"
    },
    {
      "name": "Escapes in remote function call",
      "scope": "variable.function.elixir constant.character.escape.char.elixir",
      "foreground": "color(var(blue) l(- 30%))"
    },
    {
      "name": "Interpolation",
      "scope": "source.elixir.embedded",
      "background": "color(var(white) a(0.03))"
    },
    {
      "name": "Interpolation punctuation",
      "scope": "punctuation.section.interpolation.begin.elixir | punctuation.section.interpolation.end.elixir",
      "foreground": "color(var(white) l(- 30%))"
    },
    {
      "name": "SQL boolean",
      "scope": "constant.boolean.sql",
      "foreground": "color(var(purple))"
    },
    {
      "name": "SQL embedded",
      "scope": "source.elixir source.sql",
      "background": "color(var(white) a(0.03))"
    },
    {
      "name": "Spec name",
      "scope": "variable.other.type.elixir",
      "foreground": "color(var(yellow2) s(- 50%))"
    },
    {
      "name": "Labelled type",
      "scope": "variable.other.named-type.elixir",
      "font_style": "italic",
      "foreground": "color(var(white) l(- 20%))"
    },
    {
      "name": "Darker pre-defined types",
      "scope": "support.type.elixir",
      "foreground": "color(var(blue) l(- 20%))"
    },
    {
      "name": "Darker string punctuation",
      "scope": "source.elixir & punctuation.definition.string",
      "foreground": "color(var(yellow) l(- 15%))"
    },
    {
      "name": "Item access brackets",
      "scope": "punctuation.section.access.begin.elixir | punctuation.section.access.end.elixir",
      "foreground": "var(red)"
    },
    {
      "name": "Line continuation",
      "scope": "punctuation.separator.continuation.elixir",
      "foreground": "color(var(white) a(0.3))"
    }
  ]
}
