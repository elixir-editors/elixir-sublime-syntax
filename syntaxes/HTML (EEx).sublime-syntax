%YAML 1.2
---
version: 2
name: HTML (EEx)
scope: text.html.eex
extends: Packages/HTML/HTML.sublime-syntax

file_extensions: [html.eex, html.leex]
authors:
  - Aziz KÃ¶ksal <aziz.koeksal@gmail.com>
  - deathaxe <https://github.com/deathaxe>

contexts:
  # HTML:

  prototype:
    - meta_prepend: true
    - include: eex-embedded

  tag-html:
    - meta_append: true
    - include: eex-embedded-tag-name

  tag-attributes:
    - meta_prepend: true
    - include: eex-embedded-attribute-name

  # tag-event-attribute-value:
  #   - meta_prepend: true
  #   - match: \"
  #     scope: meta.string.html string.quoted.double.html punctuation.definition.string.begin.html
  #     embed: scope:source.js.eex
  #     embed_scope: meta.string.html meta.interpolation.html source.js.embedded.html
  #     escape: \"
  #     escape_captures:
  #       0: meta.string.html string.quoted.double.html punctuation.definition.string.end.html
  #   - match: \'
  #     scope: meta.string.html string.quoted.single.html punctuation.definition.string.begin.html
  #     embed: scope:source.js.eex
  #     embed_scope: meta.string.html meta.interpolation.html source.js.embedded.html
  #     escape: \'
  #     escape_captures:
  #       0: meta.string.html string.quoted.single.html punctuation.definition.string.end.html
  #   - include: else-pop

  script-javascript-content:
    - match: \s*((<!\[)(CDATA)(\[))
      captures:
        1: meta.tag.sgml.cdata.html
        2: punctuation.definition.tag.begin.html
        3: keyword.declaration.cdata.html
        4: punctuation.definition.tag.begin.html
      pop: 1  # make sure to match only once
      embed: scope:source.js.eex
      embed_scope: meta.tag.sgml.cdata.html source.js.embedded.html
      escape: \]\]>
      escape_captures:
        0: meta.tag.sgml.cdata.html punctuation.definition.tag.end.html
    - match: '{{script_content_begin}}'
      captures:
        1: comment.block.html punctuation.definition.comment.begin.html
      pop: 1  # make sure to match only once
      embed: scope:source.js.eex
      embed_scope: source.js.embedded.html
      escape: '{{script_content_end}}'
      escape_captures:
        1: source.js.embedded.html
        2: comment.block.html punctuation.definition.comment.end.html
        3: source.js.embedded.html
        4: comment.block.html punctuation.definition.comment.end.html

  # Needs special handling
  tag-style-attribute-value:
    - meta_prepend: true
    - match: \"
      scope: meta.string.html string.quoted.double.html punctuation.definition.string.begin.html
      embed: scope:source.css.eex
      embed_scope: meta.string.html meta.interpolation.html source.css.embedded.html
      escape: \"
      escape_captures:
        0: meta.string.html string.quoted.double.html punctuation.definition.string.end.html
    - match: \'
      scope: meta.string.html string.quoted.single.html punctuation.definition.string.begin.html
      embed: scope:source.css.eex
      embed_scope: meta.string.html meta.interpolation.html source.css.embedded.html
      escape: \'
      escape_captures:
        0: meta.string.html string.quoted.single.html punctuation.definition.string.end.html
    - include: else-pop
    # - match: \"(?=<%(?:%=?|[=/|]?))
    #   scope: meta.string.html string.quoted.double.html punctuation.definition.string.begin.html
    #   push:
    #     - match: \"
    #       scope: meta.string.html string.quoted.double.html punctuation.definition.string.end.html
    #       pop: 1
    #     - include: eex-interpolations
    #     - include: else-pop

  tag-attribute-value-content:
    - meta_prepend: true
    - include: eex-interpolations

  strings-common-content:
    - meta_prepend: true
    - include: eex-interpolations

  # EEx:

  eex-interpolations:
    - include: scope:text.eex#eex-interpolated-comment
    # Tags <%/ and <%| are parsed but have no functionality in EEx yet.
    - match: <%(?:%=?|[=/|]?)
      scope: punctuation.section.embedded.begin.eex
      push: eex-interpolation-tag-content-pop

  eex-interpolation-tag-content-pop:
    # Need to clear the string scope.
    - clear_scopes: 1
    - meta_include_prototype: false
    - meta_scope: meta.embedded.eex
    - meta_content_scope: source.elixir.embedded.html
    - include: eex-embedded-content-pop

  eex-embedded:
    - include: scope:text.eex#eex-embedded-comment
    # Tags <%/ and <%| are parsed but have no functionality in EEx yet.
    - match: <%(?:%=?|[=/|]?)
      scope: punctuation.section.embedded.begin.eex
      push: eex-embedded-content-pop

  eex-embedded-content-pop:
    - meta_include_prototype: false
    - meta_scope: meta.embedded.eex
    - meta_content_scope: source.elixir.embedded.html
    - include: scope:text.eex#eex-tag-end-pop
    - include: scope:text.eex#elixir-line-comment
    - include: scope:source.elixir
      apply_prototype: true

  eex-embedded-tag-name:
    - match: (</?)\s*(<%(?:%?=?))
      captures:
        1: punctuation.definition.tag.begin.html
        2: punctuation.section.embedded.begin.eex
      push: [tag-other-content, eex-embedded-content-pop]

  eex-embedded-attribute-name:
    - match: \s*(<%(?:%?=?))
      captures:
        1: punctuation.section.embedded.begin.eex
      push:
        - tag-generic-attribute-meta
        - tag-generic-attribute-assignment
        - eex-embedded-content-pop
