%YAML 1.2
---
version: 2
name: HTML (HEEx)
scope: text.html.heex
extends: Packages/HTML/HTML.sublime-syntax

file_extensions: [heex]
authors:
  - Aziz KÃ¶ksal <aziz.koeksal@gmail.com>
  - deathaxe <https://github.com/deathaxe>

variables:
  heex_tag_char: '[^ \n."''/=<>\x{7F}-\x{9F}]'
  heex_tag_name: '[A-Z]{{heex_tag_char}}*'
  is_heex_tag_name_begin: (?=[.A-Z])

contexts:
  # HTML overrides:

  tag-other:
    - meta_prepend: true
    - include: heex-tags
    - include: HTML (EEx).sublime-syntax#eex-embedded

  tag-generic-attribute-name:
    - meta_prepend: true
    - include: elixir-string-interpolation

  tag-attribute-value-content:
    - meta_prepend: true
    - include: elixir-string-interpolation

  strings-common-content:
    - meta_prepend: true
    - include: elixir-string-interpolation

  comment-content:
    - meta_prepend: true
    - include: elixir-interpolation

  # HEEx:

  heex-tags:
    - match: <{{is_heex_tag_name_begin}}
      scope: punctuation.definition.tag.begin.html
      push: [heex-begin-tag-content-pop, heex-begin-tag-name-pop]

    - match: </{{is_heex_tag_name_begin}}
      scope: punctuation.definition.tag.begin.html
      push: [heex-end-tag-content-pop, heex-end-tag-name-pop]

  heex-begin-tag-content-pop:
    - meta_scope: meta.tag.other.heex
    - include: tag-end-maybe-self-closing
    - include: tag-attributes

  heex-end-tag-content-pop:
    - meta_scope: meta.tag.other.heex
    - include: tag-end
    - include: else-pop

  heex-begin-tag-name-pop:
    - match: '{{heex_tag_name}}'
      scope: entity.name.tag.begin.heex
    - include: heex-tag-name-common-pop

  heex-end-tag-name-pop:
    - match: '{{heex_tag_name}}'
      scope: entity.name.tag.end.heex
    - include: heex-tag-name-common-pop

  heex-tag-name-common-pop:
    - match: '[[:lower:]_]\w*[?!]?'
      scope: variable.function.heex
      pop: 1
    - match: \.
      scope: punctuation.accessor.dot.heex
    - include: immediately-pop

  # Elixir:

  elixir-interpolation:
    - match: \{
      scope: punctuation.section.interpolation.begin.elixir
      push: elixir-interpolation-content-pop

  elixir-interpolation-content-pop:
    - meta_scope: meta.interpolation.html
    - meta_content_scope: source.elixir.interpolated.html
    - match: \}
      scope: punctuation.section.interpolation.end.elixir
      pop: 1
    - include: scope:source.elixir
      apply_prototype: true

  elixir-string-interpolation:
    - match: \{
      scope: punctuation.section.interpolation.begin.elixir
      push: elixir-string-interpolation-content-pop

  elixir-string-interpolation-content-pop:
    - clear_scopes: 1
    - meta_scope: meta.interpolation.html
    - meta_content_scope: source.elixir.interpolated.html
    - include: elixir-interpolation-content-pop
